{"version":3,"sources":["Bot.ts","Bot.js"],"names":[],"mappings":"AAAA;;;;;;;;;AAGA,IAAI,UAAe,QAAQ,YAAR,CAAnB;;AAGA,IAAI,OAAY,QAAQ,MAAR,CAAhB;AACA,IAAI,KAAU,QAAQ,IAAR,CAAd;;AAGA,IAAA,WAAA,QAAmB,UAAnB,CAAA;;IAEA,G;AAQC,mBAAA;AAAA;;AACC,aAAK,MAAL,GAAc,KAAd;AACA,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,MAAL,GAAc,IAAI,SAAA,OAAJ,EAAd;AACA,aAAK,OAAL,GAAe,OAAf;AAEA,aAAK,MAAL,GAAc,IAAI,QAAQ,MAAZ,CAAmB;AAChC,8BAAkB,IADc;AAEhC,2BAAe;AAFiB,SAAnB,CAAd;AAIA;;;;8BAEK,K,EAAa;AAAA;;AAClB,oBAAQ,GAAR,CAAY,wBAAZ;AAEA,iBAAK,MAAL,CAAY,cAAZ,CAA2B,KAA3B,EAAkC,UAAC,KAAD,EAAQ,KAAR,EAAa;AAC9C,oBAAI,KAAJ,EAAU;AACT,4BAAQ,KAAR,CAAc,0CAAd;AACA,4BAAQ,KAAR,CAAc,KAAd;AAEA,4BAAQ,IAAR,CAAa,CAAb;AACA,iBALD,MAKO;AACN,0BAAK,MAAL,GAAc,IAAd;AACA,4BAAQ,GAAR,CAAY,yBAAZ;AACA;AACD,aAVD;AAWA;;;oCAEW,O,EAAc,O,EAA4D,Q,EAAqB;AAC1G,gBAAI,QAAQ,OAAZ,EAAoB;AACnB,oBAAI,OAAO,QAAQ,OAAf,KAA2B,QAA/B,EAAwC;AACvC,4BAAQ,OAAR,GAAkB,KAAK,MAAL,CAAY,KAAZ,CAAkB,GAAlB,CAAsB,IAAtB,EAA4B,QAAQ,OAApC,CAAlB;AACA;AAED,oBAAI,QAAO,QAAQ,OAAf,MAA2B,QAA/B,EAAwC;AACvC,4BAAQ,OAAR,GAAkB,QAAQ,OAAR,CAAgB,OAAhB,KAA4B,GAA5B,GAAkC,QAAQ,OAA5D;AACA;AACD;AAED,iBAAK,MAAL,CAAY,UAAZ,CAAuB,OAAvB;AACA,iBAAK,MAAL,CAAY,WAAZ,CAAwB,OAAxB,EAAiC,QAAQ,OAAzC,EAAkD,QAAQ,OAA1D,EAAmE,UAAS,KAAT,EAAc;AAChF,oBAAI,KAAJ,EAAU;AACT,4BAAQ,KAAR,CAAc,sCAAd;AACA,4BAAQ,KAAR,CAAc,KAAd;AACA,iBAHD,MAGO,IAAI,QAAJ,EAAa;AACnB;AACA;AACD,aAPD;AAQA;;;gCAEO,E,EAAU;AACjB,mBAAO,GAAG,OAAH,CAAW,KAAX,EAAkB,EAAlB,CAAP;AACA;;;;;;AAGF,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACjBA,QAAQ,OAAR,GDiBe,GCjBf","file":"Bot.js","sourcesContent":["\"use strict\";\n\n// External Node Imports\nlet discord: any = require(\"discord.js\");\n\n// Native Node Imports\nlet path: any = require(\"path\");\nlet fs: any = require(\"fs\");\n\n// Local TS Imports\nimport Config from \"./Config\";\n\nclass Bot {\n\tauthed: boolean;\n\tready: boolean;\n\tconfig: Config;\n\tdiscord: any;\n\n\tclient: any;\n\n\tconstructor(){\n\t\tthis.authed = false;\n\t\tthis.ready = false;\n\t\tthis.config = new Config();\n\t\tthis.discord = discord;\n\n\t\tthis.client = new discord.Client({\n\t\t\trateLimitAsError: true,\n\t\t\tautoReconnect: true\n\t\t});\n\t}\n\n\tlogin(token: string): void {\n\t\tconsole.log(\"Attempting to login...\");\n\n\t\tthis.client.loginWithToken(token, (error, token) => {\n\t\t\tif (error){\n\t\t\t\tconsole.error(\"An error occurred logging in to the bot.\");\n\t\t\t\tconsole.error(error);\n\n\t\t\t\tprocess.exit(1);\n\t\t\t} else {\n\t\t\t\tthis.authed = true;\n\t\t\t\tconsole.log(\"Successfully logged in.\");\n\t\t\t}\n\t\t});\n\t}\n\n\tsendMessage(channel: any, content: { message: string, mention?: any; options?: any }, callback?: () => void): void {\n\t\tif (content.mention){\n\t\t\tif (typeof content.mention === \"string\"){\n\t\t\t\tcontent.mention = this.client.users.get(\"id\", content.mention);\n\t\t\t}\n\n\t\t\tif (typeof content.mention === \"object\"){\n\t\t\t\tcontent.message = content.mention.mention() + \" \" + content.message;\n\t\t\t}\n\t\t}\n\n\t\tthis.client.stopTyping(channel);\n\t\tthis.client.sendMessage(channel, content.message, content.options, function(error){\n\t\t\tif (error){\n\t\t\t\tconsole.error(\"An error occurred sending a message.\");\n\t\t\t\tconsole.error(error);\n\t\t\t} else if (callback){\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t}\n\n\tstripID(id: string): string {\n\t\treturn id.replace(/\\D/g, \"\");\n\t}\n}\n\nexport default Bot;\n","\"use strict\";\n// External Node Imports\nlet discord = require(\"discord.js\");\n// Native Node Imports\nlet path = require(\"path\");\nlet fs = require(\"fs\");\n// Local TS Imports\nconst Config_1 = require(\"./Config\");\nclass Bot {\n    constructor() {\n        this.authed = false;\n        this.ready = false;\n        this.config = new Config_1.default();\n        this.discord = discord;\n        this.client = new discord.Client({\n            rateLimitAsError: true,\n            autoReconnect: true\n        });\n    }\n    login(token) {\n        console.log(\"Attempting to login...\");\n        this.client.loginWithToken(token, (error, token) => {\n            if (error) {\n                console.error(\"An error occurred logging in to the bot.\");\n                console.error(error);\n                process.exit(1);\n            }\n            else {\n                this.authed = true;\n                console.log(\"Successfully logged in.\");\n            }\n        });\n    }\n    sendMessage(channel, content, callback) {\n        if (content.mention) {\n            if (typeof content.mention === \"string\") {\n                content.mention = this.client.users.get(\"id\", content.mention);\n            }\n            if (typeof content.mention === \"object\") {\n                content.message = content.mention.mention() + \" \" + content.message;\n            }\n        }\n        this.client.stopTyping(channel);\n        this.client.sendMessage(channel, content.message, content.options, function (error) {\n            if (error) {\n                console.error(\"An error occurred sending a message.\");\n                console.error(error);\n            }\n            else if (callback) {\n                callback();\n            }\n        });\n    }\n    stripID(id) {\n        return id.replace(/\\D/g, \"\");\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Bot;\n"],"sourceRoot":"/source/"}