{"version":3,"sources":["index.ts"],"names":[],"mappings":"AAAA;;;AAGA,IAAI,OAAY,QAAQ,MAAR,CAAhB;AACA,IAAI,KAAU,QAAQ,IAAR,CAAd;;AAGA,IAAA,QAAA,QAAgB,OAAhB,CAAA;AACA,IAAA,aAAA,QAAqB,YAArB,CAAA;AAEA,IAAA,WAAA,QAAmB,UAAnB,CAAA;AACA,IAAA,cAAA,QAAsB,aAAtB,CAAA;AACA,IAAA,UAAA,QAAkB,SAAlB,CAAA;;AAGA,IAAA,YAAA,QAAoB,qBAApB,CAAA;AACA,IAAA,UAAA,QAAkB,mBAAlB,CAAA;AACA,IAAA,kBAAA,QAA0B,2BAA1B,CAAA;;AAGA,IAAA,QAAA,QAAgB,gBAAhB,CAAA;AACA,IAAA,SAAA,QAAiB,iBAAjB,CAAA;AACA,IAAA,UAAA,QAAkB,kBAAlB,CAAA;AACA,IAAA,YAAA,QAAoB,oBAApB,CAAA;AACA,IAAA,WAAA,QAAmB,mBAAnB,CAAA;AACA,IAAA,SAAA,QAAiB,iBAAjB,CAAA;AAEA,QAAQ,eAAR,EAAyB,OAAzB,EAAkC;AACjC,aAAS,iBADwB;AAEjC,cAAU,aAFuB;AAGjC,YAAQ;AACP,eAAO,QADA;AAEP,eAAO,MAFA;AAGP,kBAAU;AAHH;AAHyB,CAAlC;AAUA,IAAI,MAAW,IAAI,MAAA,OAAJ,EAAf;AACA,IAAI,YAAuB,IAAI,YAAA,OAAJ,CAAc,GAAd,CAA3B;AACA,IAAI,WAAqB,IAAI,WAAA,OAAJ,CAAa,GAAb,CAAzB;AACA,IAAI,QAAe,IAAI,QAAA,OAAJ,CAAU,GAAV,CAAnB;AAEA,UAAU,QAAV,CAAmB,IAAI,UAAA,OAAJ,CAAY,QAAZ,CAAnB;AACA,UAAU,QAAV,CAAmB,IAAI,QAAA,OAAJ,EAAnB;AACA,UAAU,QAAV,CAAmB,IAAI,gBAAA,OAAJ,EAAnB;AAEA,SAAS,QAAT,CAAkB,IAAI,OAAA,OAAJ,CAAS,KAAT,CAAlB;AACA,SAAS,QAAT,CAAkB,IAAI,UAAA,OAAJ,CAAY,KAAZ,CAAlB;AACA,SAAS,QAAT,CAAkB,IAAI,MAAA,OAAJ,CAAQ,KAAR,CAAlB;AACA,SAAS,QAAT,CAAkB,IAAI,QAAA,OAAJ,EAAlB;AACA,SAAS,QAAT,CAAkB,IAAI,SAAA,OAAJ,EAAlB;AACA,SAAS,QAAT,CAAkB,IAAI,OAAA,OAAJ,CAAS,KAAT,CAAlB;AAEA,IAAI,KAAJ,CAAU,IAAI,MAAJ,CAAW,KAArB;AAEA,QAAQ,KAAR,CAAc,MAAd;AACA,QAAQ,EAAR,CAAW,QAAX,EAAqB,YAAA;AACpB,aAAA,MAAA,GAAA;AACC,YAAI,MAAJ,CAAW,MAAX;AACA,gBAAQ,IAAR,CAAa,CAAb;AACA;AAED,YAAQ,GAAR,CAAY,gBAAZ;AAEA,aAAA,OAAA,CAAO,OAAP,CAAe,GAAf,EAAoB,gBAApB,EACE,IADF,CACO;AAAA,eAAW,QAAX;AAAA,KADP,EAEE,KAFF,CAEQ;AAAA,eAAS,QAAT;AAAA,KAFR;AAGA,CAXD","file":"index.js","sourcesContent":["\"use strict\";\n\n// Native Node Imports\nlet path: any = require(\"path\");\nlet fs: any = require(\"fs\");\n\n// Local TS Imports\nimport Bot from \"./Bot\";\nimport Commands from \"./Commands\";\nimport Config from \"./Config\";\nimport Logger from \"./Logger\";\nimport Listeners from \"./Listeners\";\nimport Queue from \"./Queue\";\n\n// Bot Listener Imports\nimport Message from \"./Listeners/Message\";\nimport Ready from \"./Listeners/Ready\";\nimport VoiceSpeaking from \"./Listeners/VoiceSpeaking\";\n\n// Bot Command Imports\nimport Add from \"./Commands/Add\";\nimport List from \"./Commands/List\";\nimport Pause from \"./Commands/Pause\";\nimport Playing from \"./Commands/Playing\";\nimport Resume from \"./Commands/Resume\";\nimport Veto from \"./Commands/Veto\";\n\nrequire(\"console-stamp\")(console, {\n\tpattern: \"HH:MM:ss mmm/dd\",\n\tmetadata: \"[dJdiscord]\",\n\tcolors: {\n\t\tstamp: \"yellow\",\n\t\tlabel: \"grey\",\n\t\tmetadata: \"green\"\n\t}\n});\n\nlet bot: Bot = new Bot();\nlet listeners: Listeners = new Listeners(bot);\nlet commands: Commands = new Commands(bot);\nlet queue: Queue = new Queue(bot);\n\nlisteners.register(new Message(commands));\nlisteners.register(new Ready());\nlisteners.register(new VoiceSpeaking());\n\ncommands.register(new List(queue));\ncommands.register(new Playing(queue));\ncommands.register(new Add(queue));\ncommands.register(new Pause());\ncommands.register(new Resume());\ncommands.register(new Veto(queue));\n\nbot.login(bot.config.token);\n\nprocess.stdin.resume();\nprocess.on(\"SIGINT\", () => {\n\tfunction logout(){\n\t\tbot.client.logout();\n\t\tprocess.exit(0);\n\t}\n\n\tconsole.log(\"Terminating...\");\n\n\tLogger.message(bot, \"Terminating...\")\n\t\t.then(message => logout())\n\t\t.catch(error => logout());\n});\n"],"sourceRoot":"/source/"}