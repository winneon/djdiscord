{"version":3,"sources":["Logger.ts","Logger.js"],"names":[],"mappings":"AAAA;;;;;;AAKA,IAAK,UAAL;AAAA,CAAA,UAAK,UAAL,EAAe;AACd,eAAA,WAAA,SAAA,IAAA,CAAA,IAAA,SAAA;AACA,eAAA,WAAA,UAAA,IAAA,CAAA,IAAA,UAAA;AACA,eAAA,WAAA,OAAA,IAAA,CAAA,IAAA,OAAA;AACA,CAJD,EAAK,eAAA,aAAU,EAAV,CAAL;;IAMA,M;;;;;;;6BACa,G,EAAU,O,EAAiB,O,EAAgB;AACtD,gBAAI,WAAW,IAAI,MAAJ,CAAW,MAAX,CAAkB,IAAjC,EAAsC;AACrC,oBAAI,MAAJ,CAAW,UAAX,CAAsB,UAAU,OAAV,GAAoB,IAAI,MAAJ,CAAW,MAAX,CAAkB,IAA5D;AACA,uBAAO,IAAI,MAAJ,CAAW,WAAX,CAAuB,UAAU,OAAV,GAAoB,IAAI,MAAJ,CAAW,MAAX,CAAkB,IAA7D,EAAmE,OAAnE,EACL,KADK,CACC;AAAA,2BAAS,QAAQ,KAAR,CAAc,KAAd,CAAT;AAAA,iBADD,CAAP;AAEA,aAJD,MAIO;AACN,uBAAO,SAAP;AACA;AACD;;;gCAEc,G,EAAU,Q,EAAsD;AAAA,gBAArC,IAAqC,yDAAlB,WAAW,OAAO;;AAC9E,gBAAI,cAAJ;AAEA,oBAAQ,IAAR;AACC,qBAAK,WAAW,OAAhB;AACA;AACC,4BAAQ,kBAAR;AACA;AACD,qBAAK,WAAW,QAAhB;AACC,4BAAQ,SAAR;AACA;AACD,qBAAK,WAAW,KAAhB;AACC,4BAAQ,iBAAR;AACA;AAVF;AAaA,mBAAO,OAAO,IAAP,CAAY,GAAZ,EAAiB,QAAQ,MAAR,GAAiB,WAAW,IAAX,CAAjB,GAAoC,MAApC,GAA6C,QAA9D,CAAP;AACA;;;iCAEe,G,EAAU,O,EAAe;AACxC,mBAAO,OAAO,OAAP,CAAe,GAAf,EAAoB,OAApB,EAA6B,WAAW,QAAxC,CAAP;AACA;;;8BAEY,G,EAAU,O,EAAiB,M,EAAa;AACpD,gBAAI,MAAJ,EAAW,QAAQ,KAAR,CAAc,MAAd;AACX,mBAAO,OAAO,OAAP,CAAe,GAAf,EAAoB,OAApB,EAA6B,WAAW,KAAxC,CAAP;AACA;;;;;;AAGF,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACPA,QAAQ,OAAR,GDOe,MCPf","file":"Logger.js","sourcesContent":["\"use strict\";\n\n// Local TS Imports\nimport Bot from \"./Bot\";\n\nenum LoggerType {\n\tMESSAGE,\n\tANNOUNCE,\n\tERROR\n}\n\nclass Logger {\n\tstatic bare(bot: Bot, message: string, channel?: string): Promise<any> {\n\t\tif (channel || bot.config.linked.text){\n\t\t\tbot.client.stopTyping(channel ? channel : bot.config.linked.text);\n\t\t\treturn bot.client.sendMessage(channel ? channel : bot.config.linked.text, message)\n\t\t\t\t.catch(error => console.error(error));\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tstatic message(bot: Bot, message: string, type: LoggerType = LoggerType.MESSAGE): Promise<any> {\n\t\tlet emoji: string;\n\n\t\tswitch (type){\n\t\t\tcase LoggerType.MESSAGE:\n\t\t\tdefault:\n\t\t\t\temoji = \":notepad_spiral:\";\n\t\t\t\tbreak;\n\t\t\tcase LoggerType.ANNOUNCE:\n\t\t\t\temoji = \":notes:\";\n\t\t\t\tbreak;\n\t\t\tcase LoggerType.ERROR:\n\t\t\t\temoji = \":no_entry_sign:\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn Logger.bare(bot, emoji + \" | `\" + LoggerType[type] + \"` | \" + message);\n\t}\n\n\tstatic announce(bot: Bot, message: string): Promise<any> {\n\t\treturn Logger.message(bot, message, LoggerType.ANNOUNCE);\n\t}\n\n\tstatic error(bot: Bot, message: string, error?: Error): Promise<any> {\n\t\tif (error) console.error(error);\n\t\treturn Logger.message(bot, message, LoggerType.ERROR);\n\t}\n}\n\nexport default Logger;\n","\"use strict\";\nvar LoggerType;\n(function (LoggerType) {\n    LoggerType[LoggerType[\"MESSAGE\"] = 0] = \"MESSAGE\";\n    LoggerType[LoggerType[\"ANNOUNCE\"] = 1] = \"ANNOUNCE\";\n    LoggerType[LoggerType[\"ERROR\"] = 2] = \"ERROR\";\n})(LoggerType || (LoggerType = {}));\nclass Logger {\n    static bare(bot, message, channel) {\n        if (channel || bot.config.linked.text) {\n            bot.client.stopTyping(channel ? channel : bot.config.linked.text);\n            return bot.client.sendMessage(channel ? channel : bot.config.linked.text, message)\n                .catch(error => console.error(error));\n        }\n        else {\n            return undefined;\n        }\n    }\n    static message(bot, message, type = LoggerType.MESSAGE) {\n        let emoji;\n        switch (type) {\n            case LoggerType.MESSAGE:\n            default:\n                emoji = \":notepad_spiral:\";\n                break;\n            case LoggerType.ANNOUNCE:\n                emoji = \":notes:\";\n                break;\n            case LoggerType.ERROR:\n                emoji = \":no_entry_sign:\";\n                break;\n        }\n        return Logger.bare(bot, emoji + \" | `\" + LoggerType[type] + \"` | \" + message);\n    }\n    static announce(bot, message) {\n        return Logger.message(bot, message, LoggerType.ANNOUNCE);\n    }\n    static error(bot, message, error) {\n        if (error)\n            console.error(error);\n        return Logger.message(bot, message, LoggerType.ERROR);\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Logger;\n"],"sourceRoot":"/source/"}