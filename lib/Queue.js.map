{"version":3,"sources":["Queue.ts","Queue.js"],"names":[],"mappings":"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","file":"Queue.js","sourcesContent":["\"use strict\";\n\n// External Node Imports\nlet ytdl: any = require(\"youtube-dl\");\n\n// Local TS Imports\nimport Bot from \"./Bot\";\nimport Request from \"./Request\";\nimport Utils from \"./Utils\";\n\nclass Queue {\n\tbot: Bot;\n\tlist: Request[];\n\tisPlaying: boolean;\n\tstarted: boolean;\n\tveto: boolean;\n\n\tconstructor(bot: Bot){\n\t\tthis.bot = bot;\n\t\tthis.list = [ ];\n\t\tthis.isPlaying = false;\n\t\tthis.started = false;\n\t\tthis.veto = false;\n\t}\n\n\tget currentlyPlaying(){\n\t\treturn \"Now Playing: `\" + (this.list[0].shortTitle ? this.list[0].shortTitle : this.list[0].title) + \" [\" + new Utils().secondsAsString(parseInt((this.bot.client.voiceConnection.streamTime / 1000).toString())) + \"/\" + this.list[0].durationAsString + \"]`.\";\n\t}\n\n\taddRequest(link: string, user: any, callback?: (error: any, request: any, position: any) => void): void {\n\t\tlet url: boolean = false;\n\n\t\tif (require(\"valid-url\").isUri(link)){\n\t\t\turl = true;\n\t\t} else {\n\t\t\tlink = \"gvsearch1:\" + link;\n\t\t}\n\n\t\tytdl.getInfo(link, (error, info) => {\n\t\t\tif (error){\n\t\t\t\tif (error.message.indexOf(\"ERROR: Unsupported URL\") > -1){\n\t\t\t\t\tif (callback) callback(\"invalid\", undefined, undefined);\n\t\t\t\t} else {\n\t\t\t\t\tif (callback) callback(error.message, undefined, undefined);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Credit to http://stackoverflow.com/a/9640417.\n\t\t\t\tlet split: string[] = info.duration.split(\":\");\n\t\t\t\tlet sec: number = 0;\n\t\t\t\tlet min: number = 1;\n\n\t\t\t\twhile (split.length > 0){\n\t\t\t\t\tsec += min * parseInt(split.pop(), 10);\n\t\t\t\t\tmin *= 60;\n\t\t\t\t}\n\n\t\t\t\tlet request: Request = new Request({\n\t\t\t\t\ttitle: info.fulltitle,\n\t\t\t\t\tlink: url ? link : \"https://www.youtube.com/watch?v=\" + info.id,\n\t\t\t\t\trequester: user.id ? user.id : user,\n\t\t\t\t\tduration: sec,\n\t\t\t\t\tshortTitle: info.title\n\t\t\t\t});\n\n\t\t\t\tif (this.list.length > 1 && this.list[this.list.length - 1].requester !== request.requester){\n\t\t\t\t\tlet i: number = this.list.length - 1;\n\n\t\t\t\t\twhile (true){\n\t\t\t\t\t\tif (this.list[i - 1] && this.list[i].requester === this.list[i - 1].requester){\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.list.splice(i + 1, 0, request);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.list.push(request);\n\t\t\t\t}\n\n\t\t\t\tif (callback) callback(undefined, request, this.list.indexOf(request) + 1);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis._checkQueue();\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t});\n\t}\n\n\tremRequest(position, callback?: (error: any, request: Request) => void): void {\n\t\tif (this.list.length >= position + 1){\n\t\t\tlet voice: any = this.bot.client.voiceConnection;\n\t\t\tlet cont: boolean = false;\n\t\t\tlet request: Request = this.list[position];\n\n\t\t\t//console.log(this.list);\n\n\t\t\tif (position === 0 && this.isPlaying){\n\t\t\t\tthis.bot.client.setPlayingGame(null, (error) => {\n\t\t\t\t\tif (error){\n\t\t\t\t\t\tconsole.error(\"An error occurred resetting the song status on remove.\");\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.veto = true;\n\t\t\t\tvoice.stopPlaying();\n\n\t\t\t\tthis.isPlaying = false;\n\t\t\t\tthis.started = false;\n\n\t\t\t\tcont = true;\n\t\t\t}\n\n\t\t\tthis.list.splice(position, 1);\n\t\t\tif (callback) callback(undefined, request);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (cont){\n\t\t\t\t\tthis._checkQueue();\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tif (callback) callback(\"nothing playing\", undefined);\n\t\t}\n\t}\n\n\t_checkQueue(): void {\n\t\tif (!this.started && !this.bot.client.voiceConnection.playing && this.list.length > 0){\n\t\t\tthis._queryQueue(this.list[0]);\n\t\t}\n\t}\n\n\t_queryQueue(request: any): void {\n\t\tthis.started = true;\n\n\t\tlet loadMessage: any = undefined;\n\t\tlet stream: any = ytdl(request.link, [ \"--format=bestaudio[abr<=192]/best\" ]);\n\n\t\tstream.on(\"info\", (info, format) => {\n\t\t\tif (loadMessage){\n\t\t\t\tthis.bot.client.deleteMessage(loadMessage, (error) => {\n\t\t\t\t\tif (error){\n\t\t\t\t\t\tconsole.error(\"An error occurred deleting the loading message.\")\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.bot.sendMessage(this.bot.config.linked.text, {\n\t\t\t\tmessage: \"Now Playing: `\" + request.title + \"`.\"\n\t\t\t});\n\n\t\t\tthis.bot.client.setPlayingGame(info.title);\n\t\t});\n\n\t\tstream.on(\"error\", (error) => {\n\t\t\tthis.bot.sendMessage(this.bot.config.linked.text, {\n\t\t\t\tmessage: \"```\\n\" + error.message + \"\\n```\"\n\t\t\t});\n\n\t\t\tthis.remRequest(0);\n\t\t});\n\n\t\tthis.bot.sendMessage(this.bot.config.linked.text, {\n\t\t\tmessage: \"Loading: `\" + request.title + \"`...\"\n\t\t}, (message) => {\n\t\t\tloadMessage = message;\n\t\t});\n\n\t\tthis.bot.client.voiceConnection.playRawStream(stream, (error, intent) => {\n\t\t\tif (error){\n\t\t\t\tconsole.error(\"An error occurred playing a stream.\")\n\t\t\t\tconsole.error(error);\n\t\t\t} else {\n\t\t\t\tthis.isPlaying = true;\n\n\t\t\t\tintent.on(\"end\", () => {\n\t\t\t\t\tif (this.veto){\n\t\t\t\t\t\tthis.veto = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.remRequest(0);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default Queue;\n","\"use strict\";\n// External Node Imports\nlet ytdl = require(\"youtube-dl\");\nconst Request_1 = require(\"./Request\");\nconst Utils_1 = require(\"./Utils\");\nclass Queue {\n    constructor(bot) {\n        this.bot = bot;\n        this.list = [];\n        this.isPlaying = false;\n        this.started = false;\n        this.veto = false;\n    }\n    get currentlyPlaying() {\n        return \"Now Playing: `\" + (this.list[0].shortTitle ? this.list[0].shortTitle : this.list[0].title) + \" [\" + new Utils_1.default().secondsAsString(parseInt((this.bot.client.voiceConnection.streamTime / 1000).toString())) + \"/\" + this.list[0].durationAsString + \"]`.\";\n    }\n    addRequest(link, user, callback) {\n        let url = false;\n        if (require(\"valid-url\").isUri(link)) {\n            url = true;\n        }\n        else {\n            link = \"gvsearch1:\" + link;\n        }\n        ytdl.getInfo(link, (error, info) => {\n            if (error) {\n                if (error.message.indexOf(\"ERROR: Unsupported URL\") > -1) {\n                    if (callback)\n                        callback(\"invalid\", undefined, undefined);\n                }\n                else {\n                    if (callback)\n                        callback(error.message, undefined, undefined);\n                }\n            }\n            else {\n                // Credit to http://stackoverflow.com/a/9640417.\n                let split = info.duration.split(\":\");\n                let sec = 0;\n                let min = 1;\n                while (split.length > 0) {\n                    sec += min * parseInt(split.pop(), 10);\n                    min *= 60;\n                }\n                let request = new Request_1.default({\n                    title: info.fulltitle,\n                    link: url ? link : \"https://www.youtube.com/watch?v=\" + info.id,\n                    requester: user.id ? user.id : user,\n                    duration: sec,\n                    shortTitle: info.title\n                });\n                if (this.list.length > 1 && this.list[this.list.length - 1].requester !== request.requester) {\n                    let i = this.list.length - 1;\n                    while (true) {\n                        if (this.list[i - 1] && this.list[i].requester === this.list[i - 1].requester) {\n                            i--;\n                            continue;\n                        }\n                        else {\n                            this.list.splice(i + 1, 0, request);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    this.list.push(request);\n                }\n                if (callback)\n                    callback(undefined, request, this.list.indexOf(request) + 1);\n                setTimeout(() => {\n                    this._checkQueue();\n                }, 1000);\n            }\n        });\n    }\n    remRequest(position, callback) {\n        if (this.list.length >= position + 1) {\n            let voice = this.bot.client.voiceConnection;\n            let cont = false;\n            let request = this.list[position];\n            //console.log(this.list);\n            if (position === 0 && this.isPlaying) {\n                this.bot.client.setPlayingGame(null, (error) => {\n                    if (error) {\n                        console.error(\"An error occurred resetting the song status on remove.\");\n                        console.error(error);\n                    }\n                });\n                this.veto = true;\n                voice.stopPlaying();\n                this.isPlaying = false;\n                this.started = false;\n                cont = true;\n            }\n            this.list.splice(position, 1);\n            if (callback)\n                callback(undefined, request);\n            setTimeout(() => {\n                if (cont) {\n                    this._checkQueue();\n                }\n            }, 1000);\n        }\n        else {\n            if (callback)\n                callback(\"nothing playing\", undefined);\n        }\n    }\n    _checkQueue() {\n        if (!this.started && !this.bot.client.voiceConnection.playing && this.list.length > 0) {\n            this._queryQueue(this.list[0]);\n        }\n    }\n    _queryQueue(request) {\n        this.started = true;\n        let loadMessage = undefined;\n        let stream = ytdl(request.link, [\"--format=bestaudio[abr<=192]/best\"]);\n        stream.on(\"info\", (info, format) => {\n            if (loadMessage) {\n                this.bot.client.deleteMessage(loadMessage, (error) => {\n                    if (error) {\n                        console.error(\"An error occurred deleting the loading message.\");\n                        console.error(error);\n                    }\n                });\n            }\n            this.bot.sendMessage(this.bot.config.linked.text, {\n                message: \"Now Playing: `\" + request.title + \"`.\"\n            });\n            this.bot.client.setPlayingGame(info.title);\n        });\n        stream.on(\"error\", (error) => {\n            this.bot.sendMessage(this.bot.config.linked.text, {\n                message: \"```\\n\" + error.message + \"\\n```\"\n            });\n            this.remRequest(0);\n        });\n        this.bot.sendMessage(this.bot.config.linked.text, {\n            message: \"Loading: `\" + request.title + \"`...\"\n        }, (message) => {\n            loadMessage = message;\n        });\n        this.bot.client.voiceConnection.playRawStream(stream, (error, intent) => {\n            if (error) {\n                console.error(\"An error occurred playing a stream.\");\n                console.error(error);\n            }\n            else {\n                this.isPlaying = true;\n                intent.on(\"end\", () => {\n                    if (this.veto) {\n                        this.veto = false;\n                    }\n                    else {\n                        this.remRequest(0);\n                    }\n                });\n            }\n        });\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Queue;\n"],"sourceRoot":"/source/"}