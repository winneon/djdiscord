{"version":3,"sources":["Queue.ts","Queue.js"],"names":[],"mappings":"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","file":"Queue.js","sourcesContent":["\"use strict\";\n\n// External Node Imports\nlet ytdl: any = require(\"youtube-dl\");\n\n// Local TS Imports\nimport Bot from \"./Bot\";\nimport Logger from \"./Logger\";\nimport Request from \"./Request\";\nimport Utils from \"./Utils\";\n\nclass Queue {\n\tbot: Bot;\n\tlist: Request[];\n\tisPlaying: boolean;\n\tstarted: boolean;\n\tveto: boolean;\n\n\tconstructor(bot: Bot){\n\t\tthis.bot = bot;\n\t\tthis.list = [ ];\n\t\tthis.isPlaying = false;\n\t\tthis.started = false;\n\t\tthis.veto = false;\n\t}\n\n\tget currentlyPlaying(){\n\t\treturn this.list.length > 0 ? (\"Now Playing: `\" + (this.list[0].shortTitle ? this.list[0].shortTitle : this.list[0].title) + \" [\" + Utils.secondsAsString(parseInt((this.bot.client.voiceConnection.streamTime / 1000).toString())) + \"/\" + this.list[0].durationAsString + \"]`.\") : \"There is nothing playing.\";\n\t}\n\n\taddRequest(link: string, user: any): Promise<any> {\n\t\tlet url: boolean = false;\n\n\t\tif (require(\"valid-url\").isUri(link)){\n\t\t\turl = true;\n\t\t} else {\n\t\t\tlink = \"gvsearch1:\" + link;\n\t\t}\n\n\t\tlet that: Queue = this;\n\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tytdl.getInfo(link, (error, info) => {\n\t\t\t\tif (error){\n\t\t\t\t\tif (error.message.indexOf(\"ERROR: Unsupported URL\") > -1){\n\t\t\t\t\t\treject(new Error(\"Invalid URL.\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t} else if (info instanceof Array){\n\t\t\t\t\treject(new Error(\"Playlists not supported.\"));\n\t\t\t\t} else {\n\t\t\t\t\t// Credit to http://stackoverflow.com/a/9640417.\n\t\t\t\t\tlet split: string[] = info.duration.split(\":\");\n\t\t\t\t\tlet sec: number = 0;\n\t\t\t\t\tlet min: number = 1;\n\n\t\t\t\t\twhile (split.length > 0){\n\t\t\t\t\t\tsec += min * parseInt(split.pop(), 10);\n\t\t\t\t\t\tmin *= 60;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet request: Request = new Request({\n\t\t\t\t\t\ttitle: info.fulltitle,\n\t\t\t\t\t\tlink: url ? link : \"https://www.youtube.com/watch?v=\" + info.id,\n\t\t\t\t\t\trequester: user.id ? user.id : user,\n\t\t\t\t\t\tduration: sec,\n\t\t\t\t\t\tshortTitle: info.title\n\t\t\t\t\t});\n\n\t\t\t\t\tif (that.list.length > 1 && that.list[that.list.length - 1].requester !== request.requester){\n\t\t\t\t\t\tlet i: number = that.list.length - 1;\n\n\t\t\t\t\t\twhile (true){\n\t\t\t\t\t\t\tif (that.list[i - 1] && that.list[i].requester === that.list[i - 1].requester){\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.list.splice(i + 1, 0, request);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat.list.push(request);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\trequest: request,\n\t\t\t\t\t\tposition: that.list.indexOf(request) + 1\n\t\t\t\t\t});\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthat._checkQueue();\n\t\t\t\t\t}, 1000);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tremRequest(position): Promise<any> {\n\t\tif (this.list.length >= position + 1){\n\t\t\tlet voice: any = this.bot.client.voiceConnection;\n\t\t\tlet cont: boolean = false;\n\t\t\tlet request: Request = this.list[position];\n\n\t\t\t//console.log(this.list);\n\n\t\t\tif (position === 0 && this.isPlaying){\n\t\t\t\tthis.bot.client.setPlayingGame(null)\n\t\t\t\t\t.catch(error => console.error(error));\n\n\t\t\t\tthis.veto = true;\n\t\t\t\tvoice.stopPlaying();\n\n\t\t\t\tthis.isPlaying = false;\n\t\t\t\tthis.started = false;\n\n\t\t\t\tcont = true;\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (this.veto){\n\t\t\t\t\t\tthis.veto = false;\n\t\t\t\t\t}\n\t\t\t\t}, 5000);\n\t\t\t}\n\n\t\t\tthis.list.splice(position, 1);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (cont){\n\t\t\t\t\tthis._checkQueue();\n\t\t\t\t}\n\t\t\t}, 1000);\n\n\t\t\treturn Promise.resolve(request);\n\t\t} else {\n\t\t\treturn Promise.reject(new Error(\"There is nothing playing.\"));\n\t\t}\n\t}\n\n\t_checkQueue(): void {\n\t\tif (!this.started && !this.bot.client.voiceConnection.playing && this.list.length > 0){\n\t\t\tthis._queryQueue(this.list[0]);\n\t\t}\n\t}\n\n\t_queryQueue(request: any): void {\n\t\tthis.started = true;\n\n\t\tlet loadMessage: any = undefined;\n\t\tlet stream: any = ytdl(request.link, [ \"--format=bestaudio[abr<=192]/best\" ]);\n\n\t\tstream.on(\"info\", (info, format) => {\n\t\t\tif (loadMessage){\n\t\t\t\tthis.bot.client.deleteMessage(loadMessage)\n\t\t\t\t\t.catch(error => console.error(error));\n\t\t\t}\n\n\t\t\tLogger.announce(this.bot, \"Now Playing: `\" + request.title + \"`.\");\n\n\t\t\tthis.bot.client.setPlayingGame(info.title)\n\t\t\t\t.catch(error => console.error(error));\n\t\t});\n\n\t\tstream.on(\"error\", (error) => {\n\t\t\tLogger.error(this.bot, \"Unknown Error:\\n\\n```\" + error.message + \"```\", error);\n\t\t\tthis.remRequest(0);\n\t\t});\n\n\t\tLogger.announce(this.bot, \"Loading: `\" + request.title + \"`...\")\n\t\t\t.then(message => loadMessage = message);\n\n\t\tthis.bot.client.voiceConnection.playRawStream(stream)\n\t\t\t.then((intent) => {\n\t\t\t\tthis.isPlaying = true;\n\t\t\t\tintent.on(\"error\", error => console.error(error));\n\n\t\t\t\tintent.on(\"end\", () => {\n\t\t\t\t\tif (this.veto){\n\t\t\t\t\t\tthis.veto = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.remRequest(0);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => console.error(error));\n\t}\n}\n\nexport default Queue;\n","\"use strict\";\n// External Node Imports\nlet ytdl = require(\"youtube-dl\");\nconst Logger_1 = require(\"./Logger\");\nconst Request_1 = require(\"./Request\");\nconst Utils_1 = require(\"./Utils\");\nclass Queue {\n    constructor(bot) {\n        this.bot = bot;\n        this.list = [];\n        this.isPlaying = false;\n        this.started = false;\n        this.veto = false;\n    }\n    get currentlyPlaying() {\n        return this.list.length > 0 ? (\"Now Playing: `\" + (this.list[0].shortTitle ? this.list[0].shortTitle : this.list[0].title) + \" [\" + Utils_1.default.secondsAsString(parseInt((this.bot.client.voiceConnection.streamTime / 1000).toString())) + \"/\" + this.list[0].durationAsString + \"]`.\") : \"There is nothing playing.\";\n    }\n    addRequest(link, user) {\n        let url = false;\n        if (require(\"valid-url\").isUri(link)) {\n            url = true;\n        }\n        else {\n            link = \"gvsearch1:\" + link;\n        }\n        let that = this;\n        return new Promise((resolve, reject) => {\n            ytdl.getInfo(link, (error, info) => {\n                if (error) {\n                    if (error.message.indexOf(\"ERROR: Unsupported URL\") > -1) {\n                        reject(new Error(\"Invalid URL.\"));\n                    }\n                    else {\n                        reject(error);\n                    }\n                }\n                else if (info instanceof Array) {\n                    reject(new Error(\"Playlists not supported.\"));\n                }\n                else {\n                    // Credit to http://stackoverflow.com/a/9640417.\n                    let split = info.duration.split(\":\");\n                    let sec = 0;\n                    let min = 1;\n                    while (split.length > 0) {\n                        sec += min * parseInt(split.pop(), 10);\n                        min *= 60;\n                    }\n                    let request = new Request_1.default({\n                        title: info.fulltitle,\n                        link: url ? link : \"https://www.youtube.com/watch?v=\" + info.id,\n                        requester: user.id ? user.id : user,\n                        duration: sec,\n                        shortTitle: info.title\n                    });\n                    if (that.list.length > 1 && that.list[that.list.length - 1].requester !== request.requester) {\n                        let i = that.list.length - 1;\n                        while (true) {\n                            if (that.list[i - 1] && that.list[i].requester === that.list[i - 1].requester) {\n                                i--;\n                                continue;\n                            }\n                            else {\n                                that.list.splice(i + 1, 0, request);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        that.list.push(request);\n                    }\n                    resolve({\n                        request: request,\n                        position: that.list.indexOf(request) + 1\n                    });\n                    setTimeout(() => {\n                        that._checkQueue();\n                    }, 1000);\n                }\n            });\n        });\n    }\n    remRequest(position) {\n        if (this.list.length >= position + 1) {\n            let voice = this.bot.client.voiceConnection;\n            let cont = false;\n            let request = this.list[position];\n            //console.log(this.list);\n            if (position === 0 && this.isPlaying) {\n                this.bot.client.setPlayingGame(null)\n                    .catch(error => console.error(error));\n                this.veto = true;\n                voice.stopPlaying();\n                this.isPlaying = false;\n                this.started = false;\n                cont = true;\n                setTimeout(() => {\n                    if (this.veto) {\n                        this.veto = false;\n                    }\n                }, 5000);\n            }\n            this.list.splice(position, 1);\n            setTimeout(() => {\n                if (cont) {\n                    this._checkQueue();\n                }\n            }, 1000);\n            return Promise.resolve(request);\n        }\n        else {\n            return Promise.reject(new Error(\"There is nothing playing.\"));\n        }\n    }\n    _checkQueue() {\n        if (!this.started && !this.bot.client.voiceConnection.playing && this.list.length > 0) {\n            this._queryQueue(this.list[0]);\n        }\n    }\n    _queryQueue(request) {\n        this.started = true;\n        let loadMessage = undefined;\n        let stream = ytdl(request.link, [\"--format=bestaudio[abr<=192]/best\"]);\n        stream.on(\"info\", (info, format) => {\n            if (loadMessage) {\n                this.bot.client.deleteMessage(loadMessage)\n                    .catch(error => console.error(error));\n            }\n            Logger_1.default.announce(this.bot, \"Now Playing: `\" + request.title + \"`.\");\n            this.bot.client.setPlayingGame(info.title)\n                .catch(error => console.error(error));\n        });\n        stream.on(\"error\", (error) => {\n            Logger_1.default.error(this.bot, \"Unknown Error:\\n\\n```\" + error.message + \"```\", error);\n            this.remRequest(0);\n        });\n        Logger_1.default.announce(this.bot, \"Loading: `\" + request.title + \"`...\")\n            .then(message => loadMessage = message);\n        this.bot.client.voiceConnection.playRawStream(stream)\n            .then((intent) => {\n            this.isPlaying = true;\n            intent.on(\"error\", error => console.error(error));\n            intent.on(\"end\", () => {\n                if (this.veto) {\n                    this.veto = false;\n                }\n                else {\n                    this.remRequest(0);\n                }\n            });\n        })\n            .catch(error => console.error(error));\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Queue;\n"],"sourceRoot":"/source/"}