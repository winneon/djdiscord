{"version":3,"sources":["Listeners/Ready.ts","Listeners/Ready.js"],"names":[],"mappings":"AAAA;;;;;;;AAGA,IAAI,KAAU,QAAQ,IAAR,CAAd;;IAOA,K;;;;;;;mCACY,G,EAAQ;AAClB,gBAAI,IAAI,MAAJ,CAAW,MAAX,CAAkB,KAAtB,EAA4B;AAC3B,oBAAI,MAAJ,CAAW,gBAAX,CAA4B,IAAI,MAAJ,CAAW,MAAX,CAAkB,KAA9C,EAAqD,UAAC,KAAD,EAAQ,UAAR,EAAkB;AACtE,wBAAI,KAAJ,EAAU;AACT,gCAAQ,KAAR,CAAc,4DAAd;AACA,gCAAQ,KAAR,CAAc,KAAd;AACA;AACD,iBALD;AAMA;AAED,gBAAI,MAAJ,CAAW,cAAX,CAA0B,IAA1B,EAAgC,UAAC,KAAD,EAAM;AACrC,oBAAI,KAAJ,EAAU;AACT,4BAAQ,KAAR,CAAc,8CAAd;AACA,4BAAQ,KAAR,CAAc,KAAd;AACA;AACD,aALD;AAOA,oBAAQ,GAAR,CAAY,mCAAZ;AACA;;;;;;AAGF,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACTA,QAAQ,OAAR,GDSe,KCTf","file":"Listeners/Ready.js","sourcesContent":["\"use strict\";\n\n// Native Node Imports\nlet fs: any = require(\"fs\");\n\n// Local TS Imports\nimport Bot from \"../Bot\";\nimport Commands from \"../Commands\";\nimport Listener from \"../Interfaces/Listener\";\n\nclass Ready implements Listener {\n\tonBotEvent(bot: Bot): void {\n\t\tif (bot.config.linked.voice){\n\t\t\tbot.client.joinVoiceChannel(bot.config.linked.voice, (error, connection) => {\n\t\t\t\tif (error){\n\t\t\t\t\tconsole.error(\"An error occurred connecting to the default voice channel.\");\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tbot.client.setPlayingGame(null, (error) => {\n\t\t\tif (error){\n\t\t\t\tconsole.error(\"An error occurred resetting the song status.\");\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t});\n\n\t\tconsole.log(\"Ready and listening for commands.\");\n\t}\n}\n\nexport default Ready;\n","\"use strict\";\n// Native Node Imports\nlet fs = require(\"fs\");\nclass Ready {\n    onBotEvent(bot) {\n        if (bot.config.linked.voice) {\n            bot.client.joinVoiceChannel(bot.config.linked.voice, (error, connection) => {\n                if (error) {\n                    console.error(\"An error occurred connecting to the default voice channel.\");\n                    console.error(error);\n                }\n            });\n        }\n        bot.client.setPlayingGame(null, (error) => {\n            if (error) {\n                console.error(\"An error occurred resetting the song status.\");\n                console.error(error);\n            }\n        });\n        console.log(\"Ready and listening for commands.\");\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ready;\n"],"sourceRoot":"/source/"}