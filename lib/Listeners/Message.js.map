{"version":3,"sources":["Listeners/Message.ts","Listeners/Message.js"],"names":[],"mappings":"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","file":"Listeners/Message.js","sourcesContent":["\"use strict\";\n\n// Local TS Imports\nimport Bot from \"../Bot\";\nimport Commands from \"../Commands\";\nimport Listener from \"../Interfaces/Listener\";\n\nclass Message implements Listener {\n\tcommands: Commands;\n\n\tconstructor(commands: Commands){\n\t\tthis.commands = commands;\n\t}\n\n\tonBotEvent(bot: Bot, message: any): void {\n\t\tlet text: string = message.content;\n\n\t\tif (bot.config.linked.text && message.channel.id === bot.config.linked.text){\n\t\t\tif (text.toLowerCase().startsWith(bot.config.commandPrefix)){\n\t\t\t\tlet command: string = text.split(\" \")[0].replace(bot.config.commandPrefix, \"\").toLowerCase();\n\t\t\t\tlet args: string[] = text.split(\" \");\n\n\t\t\t\targs.splice(0, 1);\n\n\t\t\t\tif (command === \"help\"){\n\t\t\t\t\t//this.bot.getBot().deleteMessage(message);\n\t\t\t\t\tbot.sendMessage(message.channel, {\n\t\t\t\t\t\tmessage: this.commands.help\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tif (Object.keys(this.commands.commands).indexOf(command.toLowerCase()) > -1){\n\t\t\t\t\t\tif (this.commands.commands[command].args <= args.length){\n\t\t\t\t\t\t\tconsole.log(\"Command: \" + bot.config.commandPrefix + command + \", User: \" + message.author.username);\n\t\t\t\t\t\t\tthis.commands.commands[command].onCommand(bot, message, args);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbot.sendMessage(message.channel, {\n\t\t\t\t\t\t\t\tmessage: \"```Usage: \" + bot.config.commandPrefix + this.commands.commands[command].usage.replace(\"%cmd%\", command) + \"```\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbot.sendMessage(message.channel, {\n\t\t\t\t\t\t\tmessage: \"That command doesn't exist! Try running `\" + bot.config.commandPrefix + \"help` for a list of commands.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (text.toLowerCase() === bot.client.user.mention() + \" are you my waifu\" && message.author.id === \"87353905251377152\"){\n\t\t\tbot.sendMessage(message.channel, {\n\t\t\t\tmessage: \"Yes, my love.\",\n\t\t\t\tmention: message.author\n\t\t\t});\n\t\t}\n\n\t\tif (bot.client.userHasRole(message.author, bot.config.staffRole)){\n\t\t\tlet cont: boolean = false;\n\n\t\t\tif (text.toLowerCase() === bot.client.user.mention() + \" listen here\"){\n\t\t\t\tbot.config.linked.text = message.channel.id;\n\t\t\t\tcont = true;\n\t\t\t} else if (text.toLowerCase().startsWith(bot.client.user.mention() + \" play music in \")){\n\t\t\t\tlet name: string = text.split(bot.client.user.mention() + \" play music in \").join(\"\");\n\t\t\t\tlet channels: any[] = bot.client.channels.getAll(\"name\", name);\n\n\t\t\t\tif (channels.length > 0){\n\t\t\t\t\tfor (let channel of channels){\n\t\t\t\t\t\tif (channel.type === \"voice\"){\n\t\t\t\t\t\t\tbot.config.linked.voice = channel.id;\n\t\t\t\t\t\t\tcont = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbot.client.joinVoiceChannel(channel.id, (error, connection) => {\n\t\t\t\t\t\t\t\tif (error){\n\t\t\t\t\t\t\t\t\tconsole.error(\"An error occurred connecting to a voice channel\");\n\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cont){\n\t\t\t\tbot.config.saveLinked();\n\t\t\t\n\t\t\t\tbot.sendMessage(message.channel, {\n\t\t\t\t\tmessage: \":white_check_mark:\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default Message;\n","\"use strict\";\nclass Message {\n    constructor(commands) {\n        this.commands = commands;\n    }\n    onBotEvent(bot, message) {\n        let text = message.content;\n        if (bot.config.linked.text && message.channel.id === bot.config.linked.text) {\n            if (text.toLowerCase().startsWith(bot.config.commandPrefix)) {\n                let command = text.split(\" \")[0].replace(bot.config.commandPrefix, \"\").toLowerCase();\n                let args = text.split(\" \");\n                args.splice(0, 1);\n                if (command === \"help\") {\n                    //this.bot.getBot().deleteMessage(message);\n                    bot.sendMessage(message.channel, {\n                        message: this.commands.help\n                    });\n                }\n                else {\n                    if (Object.keys(this.commands.commands).indexOf(command.toLowerCase()) > -1) {\n                        if (this.commands.commands[command].args <= args.length) {\n                            console.log(\"Command: \" + bot.config.commandPrefix + command + \", User: \" + message.author.username);\n                            this.commands.commands[command].onCommand(bot, message, args);\n                        }\n                        else {\n                            bot.sendMessage(message.channel, {\n                                message: \"```Usage: \" + bot.config.commandPrefix + this.commands.commands[command].usage.replace(\"%cmd%\", command) + \"```\"\n                            });\n                        }\n                    }\n                    else {\n                        bot.sendMessage(message.channel, {\n                            message: \"That command doesn't exist! Try running `\" + bot.config.commandPrefix + \"help` for a list of commands.\"\n                        });\n                    }\n                }\n            }\n        }\n        if (text.toLowerCase() === bot.client.user.mention() + \" are you my waifu\" && message.author.id === \"87353905251377152\") {\n            bot.sendMessage(message.channel, {\n                message: \"Yes, my love.\",\n                mention: message.author\n            });\n        }\n        if (bot.client.userHasRole(message.author, bot.config.staffRole)) {\n            let cont = false;\n            if (text.toLowerCase() === bot.client.user.mention() + \" listen here\") {\n                bot.config.linked.text = message.channel.id;\n                cont = true;\n            }\n            else if (text.toLowerCase().startsWith(bot.client.user.mention() + \" play music in \")) {\n                let name = text.split(bot.client.user.mention() + \" play music in \").join(\"\");\n                let channels = bot.client.channels.getAll(\"name\", name);\n                if (channels.length > 0) {\n                    for (let channel of channels) {\n                        if (channel.type === \"voice\") {\n                            bot.config.linked.voice = channel.id;\n                            cont = true;\n                            bot.client.joinVoiceChannel(channel.id, (error, connection) => {\n                                if (error) {\n                                    console.error(\"An error occurred connecting to a voice channel\");\n                                    console.error(error);\n                                }\n                            });\n                            break;\n                        }\n                    }\n                }\n            }\n            if (cont) {\n                bot.config.saveLinked();\n                bot.sendMessage(message.channel, {\n                    message: \":white_check_mark:\"\n                });\n            }\n        }\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Message;\n"],"sourceRoot":"/source/"}