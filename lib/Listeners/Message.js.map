{"version":3,"sources":["Listeners/Message.ts","Listeners/Message.js"],"names":[],"mappings":"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","file":"Listeners/Message.js","sourcesContent":["\"use strict\";\n\n// Local TS Imports\nimport Bot from \"../Bot\";\nimport Commands from \"../Commands\";\nimport Logger from \"../Logger\";\nimport Listener from \"../Interfaces/Listener\";\n\nclass Message implements Listener {\n\tcommands: Commands;\n\n\tconstructor(commands: Commands){\n\t\tthis.commands = commands;\n\t}\n\n\tonBotEvent(bot: Bot, message: any): void {\n\t\tlet text: string = message.content;\n\n\t\tif (text.toLowerCase().startsWith(bot.config.commandPrefix)){\n\t\t\tif (bot.config.linked.text && message.channel.id === bot.config.linked.text){\n\t\t\t\tlet command: string = text.split(\" \")[0].replace(bot.config.commandPrefix, \"\").toLowerCase();\n\t\t\t\tlet args: string[] = text.split(\" \");\n\n\t\t\t\targs.splice(0, 1);\n\n\t\t\t\tif (command === \"help\"){\n\t\t\t\t\tlet header: string = \"```\\ndJdiscord, running version \" + require(\"../../package.json\").version + \"\\n\\n\";\n\t\t\t\t\tlet contents: string = \"\";\n\n\t\t\t\t\tfor (let command in this.commands.commands){\n\t\t\t\t\t\tlet obj = this.commands.commands[command];\n\n\t\t\t\t\t\tcontents += obj.usage.replace(\"%cmd%\", bot.config.commandPrefix + command) + \"\\n\";\n\t\t\t\t\t\tcontents += \"  \" + obj.description + \"\\n\";\n\n\t\t\t\t\t\tif (obj.staff){\n\t\t\t\t\t\t\tcontents += \"  STAFF ONLY\\n\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontents += \"\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\tLogger.message(bot, \"Help Information:\\n\\n\" + header + contents + \"```\");\n\t\t\t\t} else {\n\t\t\t\t\tif (Object.keys(this.commands.commands).indexOf(command.toLowerCase()) > -1){\n\t\t\t\t\t\tif (this.commands.commands[command].args <= args.length){\n\t\t\t\t\t\t\tconsole.log(\"Command: \" + bot.config.commandPrefix + command + \", User: \" + message.author.username);\n\t\t\t\t\t\t\tthis.commands.commands[command].onCommand(bot, message, args);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tLogger.message(bot, \"Usage: `\" + bot.config.commandPrefix + this.commands.commands[command].usage.replace(\"%cmd%\", command) + \"`\")\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLogger.error(bot, \"That command doesn't exist! Try running `\" + bot.config.commandPrefix + \"help` for a list of commands.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bot.config.linked.text){\n\t\t\t\tLogger.error(bot, \"Please refer your music requests to <#\" + bot.config.linked.text + \">.\");\n\t\t\t}\n\t\t}\n\n\t\tif (text.toLowerCase() === bot.client.user.mention() + \" are you my waifu\" && message.author.id === \"87353905251377152\"){\n\t\t\tLogger.bare(bot, \"Yes, my love.\", message.channel);\n\t\t}\n\n\t\tif (bot.client.userHasRole(message.author, bot.config.staffRole)){\n\t\t\tlet cont: boolean = false;\n\n\t\t\tif (text.toLowerCase() === bot.client.user.mention() + \" listen here\"){\n\t\t\t\tbot.config.linked.text = message.channel.id;\n\t\t\t\tcont = true;\n\t\t\t} else if (text.toLowerCase().startsWith(bot.client.user.mention() + \" play music in \")){\n\t\t\t\tlet name: string = text.split(bot.client.user.mention() + \" play music in \").join(\"\");\n\t\t\t\tlet channels: any[] = bot.client.channels.getAll(\"name\", name);\n\n\t\t\t\tif (channels.length > 0){\n\t\t\t\t\tfor (let channel of channels){\n\t\t\t\t\t\tif (channel.type === \"voice\"){\n\t\t\t\t\t\t\tbot.config.linked.voice = channel.id;\n\t\t\t\t\t\t\tcont = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbot.client.joinVoiceChannel(channel.id)\n\t\t\t\t\t\t\t\t.catch(error => console.error(error));\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cont){\n\t\t\t\tbot.config.saveLinked();\n\t\t\t\tLogger.bare(bot, \":white_check_mark:\", message.channel);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default Message;\n","\"use strict\";\nconst Logger_1 = require(\"../Logger\");\nclass Message {\n    constructor(commands) {\n        this.commands = commands;\n    }\n    onBotEvent(bot, message) {\n        let text = message.content;\n        if (text.toLowerCase().startsWith(bot.config.commandPrefix)) {\n            if (bot.config.linked.text && message.channel.id === bot.config.linked.text) {\n                let command = text.split(\" \")[0].replace(bot.config.commandPrefix, \"\").toLowerCase();\n                let args = text.split(\" \");\n                args.splice(0, 1);\n                if (command === \"help\") {\n                    let header = \"```\\ndJdiscord, running version \" + require(\"../../package.json\").version + \"\\n\\n\";\n                    let contents = \"\";\n                    for (let command in this.commands.commands) {\n                        let obj = this.commands.commands[command];\n                        contents += obj.usage.replace(\"%cmd%\", bot.config.commandPrefix + command) + \"\\n\";\n                        contents += \"  \" + obj.description + \"\\n\";\n                        if (obj.staff) {\n                            contents += \"  STAFF ONLY\\n\";\n                        }\n                        contents += \"\\n\";\n                    }\n                    Logger_1.default.message(bot, \"Help Information:\\n\\n\" + header + contents + \"```\");\n                }\n                else {\n                    if (Object.keys(this.commands.commands).indexOf(command.toLowerCase()) > -1) {\n                        if (this.commands.commands[command].args <= args.length) {\n                            console.log(\"Command: \" + bot.config.commandPrefix + command + \", User: \" + message.author.username);\n                            this.commands.commands[command].onCommand(bot, message, args);\n                        }\n                        else {\n                            Logger_1.default.message(bot, \"Usage: `\" + bot.config.commandPrefix + this.commands.commands[command].usage.replace(\"%cmd%\", command) + \"`\");\n                        }\n                    }\n                    else {\n                        Logger_1.default.error(bot, \"That command doesn't exist! Try running `\" + bot.config.commandPrefix + \"help` for a list of commands.\");\n                    }\n                }\n            }\n            else if (bot.config.linked.text) {\n                Logger_1.default.error(bot, \"Please refer your music requests to <#\" + bot.config.linked.text + \">.\");\n            }\n        }\n        if (text.toLowerCase() === bot.client.user.mention() + \" are you my waifu\" && message.author.id === \"87353905251377152\") {\n            Logger_1.default.bare(bot, \"Yes, my love.\", message.channel);\n        }\n        if (bot.client.userHasRole(message.author, bot.config.staffRole)) {\n            let cont = false;\n            if (text.toLowerCase() === bot.client.user.mention() + \" listen here\") {\n                bot.config.linked.text = message.channel.id;\n                cont = true;\n            }\n            else if (text.toLowerCase().startsWith(bot.client.user.mention() + \" play music in \")) {\n                let name = text.split(bot.client.user.mention() + \" play music in \").join(\"\");\n                let channels = bot.client.channels.getAll(\"name\", name);\n                if (channels.length > 0) {\n                    for (let channel of channels) {\n                        if (channel.type === \"voice\") {\n                            bot.config.linked.voice = channel.id;\n                            cont = true;\n                            bot.client.joinVoiceChannel(channel.id)\n                                .catch(error => console.error(error));\n                            break;\n                        }\n                    }\n                }\n            }\n            if (cont) {\n                bot.config.saveLinked();\n                Logger_1.default.bare(bot, \":white_check_mark:\", message.channel);\n            }\n        }\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Message;\n"],"sourceRoot":"/source/"}