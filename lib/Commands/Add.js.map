{"version":3,"sources":["Commands/Add.ts","Commands/Add.js"],"names":[],"mappings":"AAAA;;;;;;;AAGA,IAAI,OAAY,QAAQ,WAAR,CAAhB;;AAGA,IAAI,KAAU,QAAQ,IAAR,CAAd;;IAMA,G;AAAA,mBAAA;AAAA;;AACC,aAAA,KAAA,GAAgB,cAAhB;AACA,aAAA,WAAA,GAAsB,6BAAtB;AACA,aAAA,IAAA,GAAe,CAAf;AACA,aAAA,KAAA,GAAiB,KAAjB;AAEA,aAAA,KAAA,GAAgB,EAAhB;AAsBA;;;;kCApBU,G,EAAU,O,EAAc,I,EAAc;AAAA;;AAC/C,gBAAI,SAAc,KAAK,KAAK,CAAL,CAAL,CAAlB;;AAGA,mBAAO,EAAP,CAAU,MAAV,EAAkB,UAAC,IAAD,EAAO,MAAP,EAAa;AAC9B,sBAAK,KAAL,GAAa,KAAK,KAAlB;AACA,oBAAI,MAAJ,CAAW,cAAX,CAA0B,KAAK,KAA/B;AACA,aAHD;AAKA,mBAAO,EAAP,CAAU,UAAV,EAAsB,UAAC,GAAD,EAAI;AACzB,oBAAI,IAAI,UAAJ,KAAmB,GAAvB,EAA2B;AAC1B,wBAAI,WAAJ,CAAgB,QAAQ,OAAxB,EAAiC;AAChC,iCAAS,eAAe,MAAK,KAApB,GAA4B,oBADL;AAEhC,iCAAS,QAAQ;AAFe,qBAAjC;AAIA;AACD,aAPD;AASA,gBAAI,MAAJ,CAAW,eAAX,CAA2B,aAA3B,CAAyC,MAAzC;AACA;;;;;;AAGF,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACVA,QAAQ,OAAR,GDUe,GCVf","file":"Commands/Add.js","sourcesContent":["\"use strict\";\n\n// External Node Imports\nlet ytdl: any = require(\"ytdl-core\");\n\n// Native Node Imports\nlet fs: any = require(\"fs\");\n\n// Local TS Imports\nimport Bot from \"../Bot\";\nimport Command from \"../Interfaces/Command\";\n\nclass Add implements Command {\n\tusage: string = \"%cmd% <link>\";\n\tdescription: string = \"Add a song to the dJ queue.\";\n\targs: number = 1;\n\tstaff: boolean = false;\n\n\ttitle: string = \"\";\n\n\tonCommand(bot: Bot, message: any, args: string[]): void {\n\t\tlet stream: any = ytdl(args[0]);\n\n\t\t// This will always run first in ytdl-core, so I don't need to worry about waiting for this.title.\n\t\tstream.on(\"info\", (info, format) => {\n\t\t\tthis.title = info.title;\n\t\t\tbot.client.setPlayingGame(info.title);\n\t\t});\n\n\t\tstream.on(\"response\", (res) => {\n\t\t\tif (res.statusCode === 200){\n\t\t\t\tbot.sendMessage(message.channel, {\n\t\t\t\t\tmessage: \"Enqueued `\" + this.title + \"` at position `1`.\",\n\t\t\t\t\tmention: message.author\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tbot.client.voiceConnection.playRawStream(stream);\n\t}\n}\n\nexport default Add;\n","\"use strict\";\n// External Node Imports\nlet ytdl = require(\"ytdl-core\");\n// Native Node Imports\nlet fs = require(\"fs\");\nclass Add {\n    constructor() {\n        this.usage = \"%cmd% <link>\";\n        this.description = \"Add a song to the dJ queue.\";\n        this.args = 1;\n        this.staff = false;\n        this.title = \"\";\n    }\n    onCommand(bot, message, args) {\n        let stream = ytdl(args[0]);\n        // This will always run first in ytdl-core, so I don't need to worry about waiting for this.title.\n        stream.on(\"info\", (info, format) => {\n            this.title = info.title;\n            bot.client.setPlayingGame(info.title);\n        });\n        stream.on(\"response\", (res) => {\n            if (res.statusCode === 200) {\n                bot.sendMessage(message.channel, {\n                    message: \"Enqueued `\" + this.title + \"` at position `1`.\",\n                    mention: message.author\n                });\n            }\n        });\n        bot.client.voiceConnection.playRawStream(stream);\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Add;\n"],"sourceRoot":"/source/"}