{"version":3,"sources":["Commands/List.ts","Commands/List.js"],"names":[],"mappings":"AAAA;;;;;;AAIA,IAAA,WAAA,QAAmB,WAAnB,CAAA;;IAIA,I;AAQC,kBAAY,KAAZ,EAAwB;AAAA;;AAPxB,aAAA,KAAA,GAAgB,OAAhB;AACA,aAAA,WAAA,GAAsB,iBAAtB;AACA,aAAA,IAAA,GAAe,CAAf;AACA,aAAA,KAAA,GAAiB,KAAjB;AAKC,aAAK,KAAL,GAAa,KAAb;AACA;;;;kCAES,G,EAAU,O,EAAc,I,EAAc;AAC/C,gBAAI,OAAe,EAAnB;AAEA,gBAAI,KAAK,KAAL,CAAW,IAAX,CAAgB,MAAhB,KAA2B,CAA/B,EAAiC;AAChC,yBAAA,OAAA,CAAO,KAAP,CAAa,GAAb,EAAkB,oCAAlB;AACA,aAFD,MAEO;AAAA;AAAA;AAAA;;AAAA;AACN,yCAAoB,KAAK,KAAL,CAAW,IAA/B,8HAAoC;AAAA,4BAA3B,OAA2B;;AACnC,gCAAQ,QAAQ,KAAK,KAAL,CAAW,IAAX,CAAgB,OAAhB,CAAwB,OAAxB,IAAmC,CAA3C,IAAgD,KAAhD,IAAyD,QAAQ,UAAR,GAAqB,QAAQ,UAA7B,GAA0C,QAAQ,KAA3G,IAAoH,IAApH,GAA2H,QAAQ,gBAAnI,GAAsJ,oBAAtJ,GAA6K,IAAI,MAAJ,CAAW,KAAX,CAAiB,GAAjB,CAAqB,IAArB,EAA2B,QAAQ,SAAnC,EAA8C,QAA3N,GAAsO,IAA9O;AACA;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKN,yBAAA,OAAA,CAAO,OAAP,CAAe,GAAf,EAAoB,oBAAoB,KAAK,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAxC;AACA;AACD;;;;;;AAGF,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACXA,QAAQ,OAAR,GDWe,ICXf","file":"Commands/List.js","sourcesContent":["\"use strict\";\n\n// Local TS Imports\nimport Bot from \"../Bot\";\nimport Logger from \"../Logger\";\nimport Queue from \"../Queue\";\nimport Command from \"../Interfaces/Command\";\n\nclass List implements Command {\n\tusage: string = \"%cmd%\";\n\tdescription: string = \"List the queue.\";\n\targs: number = 0;\n\tstaff: boolean = false;\n\n\tqueue: Queue;\n\n\tconstructor(queue: Queue){\n\t\tthis.queue = queue;\n\t}\n\n\tonCommand(bot: Bot, message: any, args: string[]): void {\n\t\tlet body: string = \"\";\n\n\t\tif (this.queue.list.length === 0){\n\t\t\tLogger.error(bot, \"There isn't anything in the queue.\");\n\t\t} else {\n\t\t\tfor (let request of this.queue.list){\n\t\t\t\tbody += \"\\n\" + (this.queue.list.indexOf(request) + 1) + \". `\" + (request.shortTitle ? request.shortTitle : request.title) + \" [\" + request.durationAsString + \"]`, requested by `\" + bot.client.users.get(\"id\", request.requester).username + \"`.\";\n\t\t\t}\n\n\t\t\tLogger.message(bot, \"Queue List:\\n\\n\" + body.replace(\"\\n\", \"\"));\n\t\t}\n\t}\n}\n\nexport default List;\n","\"use strict\";\nconst Logger_1 = require(\"../Logger\");\nclass List {\n    constructor(queue) {\n        this.usage = \"%cmd%\";\n        this.description = \"List the queue.\";\n        this.args = 0;\n        this.staff = false;\n        this.queue = queue;\n    }\n    onCommand(bot, message, args) {\n        let body = \"\";\n        if (this.queue.list.length === 0) {\n            Logger_1.default.error(bot, \"There isn't anything in the queue.\");\n        }\n        else {\n            for (let request of this.queue.list) {\n                body += \"\\n\" + (this.queue.list.indexOf(request) + 1) + \". `\" + (request.shortTitle ? request.shortTitle : request.title) + \" [\" + request.durationAsString + \"]`, requested by `\" + bot.client.users.get(\"id\", request.requester).username + \"`.\";\n            }\n            Logger_1.default.message(bot, \"Queue List:\\n\\n\" + body.replace(\"\\n\", \"\"));\n        }\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = List;\n"],"sourceRoot":"/source/"}