{"version":3,"sources":["Commands.ts","Commands.js"],"names":[],"mappings":"AAAA;;;;;;IAMA,Q;AAIC,sBAAY,GAAZ,EAAoB;AAAA;;AACnB,aAAK,GAAL,GAAW,GAAX;AACA,aAAK,QAAL,GAAgB,EAAhB;AACA;;;;iCAuBQ,O,EAAgB;AACxB,iBAAK,QAAL,CAAc,QAAQ,WAAR,CAAoB,IAApB,CAAyB,WAAzB,EAAd,IAAwD,OAAxD;AACA;;;4BAvBO;AACP,gBAAI,SAAiB,qCAAqC,QAAQ,iBAAR,EAA2B,OAAhE,GAA0E,MAA/F;AACA,gBAAI,WAAmB,EAAvB;AAEA,iBAAK,IAAI,OAAT,IAAoB,KAAK,QAAzB,EAAkC;AACjC,oBAAI,MAAM,KAAK,QAAL,CAAc,OAAd,CAAV;AAEA,4BAAY,IAAI,KAAJ,CAAU,OAAV,CAAkB,OAAlB,EAA2B,KAAK,GAAL,CAAS,MAAT,CAAgB,aAAhB,GAAgC,OAA3D,IAAsE,IAAlF;AACA,4BAAY,OAAO,IAAI,WAAX,GAAyB,IAArC;AAEA,oBAAI,IAAI,KAAR,EAAc;AACb,gCAAY,gBAAZ;AACA;AAED,4BAAY,IAAZ;AACA;AAED,gBAAI,SAAiB,KAArB;AACA,mBAAO,SAAS,QAAT,GAAoB,MAA3B;AACA;;;;;;AAOF,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACfA,QAAQ,OAAR,GDee,QCff","file":"Commands.js","sourcesContent":["\"use strict\";\n\n// Local TS Imports\nimport Bot from \"./Bot\";\nimport Command from \"./Interfaces/Command\";\n\nclass Commands {\n\tbot: Bot;\n\tcommands: any;\n\n\tconstructor(bot: Bot){\n\t\tthis.bot = bot;\n\t\tthis.commands = { };\n\t}\n\n\tget help(): string {\n\t\tlet header: string = \"```\\ndJdiscord, running version \" + require(\"../package.json\").version + \"\\n\\n\";\n\t\tlet contents: string = \"\";\n\n\t\tfor (let command in this.commands){\n\t\t\tlet obj = this.commands[command];\n\n\t\t\tcontents += obj.usage.replace(\"%cmd%\", this.bot.config.commandPrefix + command) + \"\\n\";\n\t\t\tcontents += \"  \" + obj.description + \"\\n\";\n\n\t\t\tif (obj.staff){\n\t\t\t\tcontents += \"  STAFF ONLY\\n\";\n\t\t\t}\n\n\t\t\tcontents += \"\\n\";\n\t\t}\n\n\t\tlet footer: string = \"```\";\n\t\treturn header + contents + footer;\n\t}\n\n\tregister(command: Command): void {\n\t\tthis.commands[command.constructor.name.toLowerCase()] = command;\n\t}\n}\n\nexport default Commands;\n","\"use strict\";\nclass Commands {\n    constructor(bot) {\n        this.bot = bot;\n        this.commands = {};\n    }\n    get help() {\n        let header = \"```\\ndJdiscord, running version \" + require(\"../package.json\").version + \"\\n\\n\";\n        let contents = \"\";\n        for (let command in this.commands) {\n            let obj = this.commands[command];\n            contents += obj.usage.replace(\"%cmd%\", this.bot.config.commandPrefix + command) + \"\\n\";\n            contents += \"  \" + obj.description + \"\\n\";\n            if (obj.staff) {\n                contents += \"  STAFF ONLY\\n\";\n            }\n            contents += \"\\n\";\n        }\n        let footer = \"```\";\n        return header + contents + footer;\n    }\n    register(command) {\n        this.commands[command.constructor.name.toLowerCase()] = command;\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Commands;\n"],"sourceRoot":"/source/"}